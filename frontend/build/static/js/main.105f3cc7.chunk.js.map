{"version":3,"sources":["ethereum.js","App.js","index.js"],"names":["getBlockchain","Promise","resolve","reject","window","addEventListener","a","ethereum","request","method","provider","ethers","providers","Web3Provider","signer","getSigner","getAddress","signerAddress","defiBallot","Contract","DefiBallot","networks","networkVersion","address","abi","undefined","SIDE","App","useState","setDefiBallot","votePredictions","setVotePredictions","myVotes","setMyVotes","useEffect","all","votes","labels","datasets","data","toString","backgroundColor","hoverBackgroundColor","votesPerGambler","init","placeVote","side","e","preventDefault","value","target","elements","withdrawGain","className","src","alt","onSubmit","type","placeholder","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.105f3cc7.chunk.js","sourcesContent":["import { ethers, Contract } from 'ethers';\nimport DefiBallot from './contracts/DefiBallot.json';\n\nconst getBlockchain = () =>\n  new Promise((resolve, reject) => {\n    window.addEventListener('load', async () => {\n      if(window.ethereum) {\n        await window.ethereum.request({ method: 'eth_requestAccounts' })\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const signerAddress = await signer.getAddress();\n\n        const defiBallot = new Contract(\n          DefiBallot.networks[window.ethereum.networkVersion].address,\n          DefiBallot.abi,\n          signer\n        );\n\n        resolve({signerAddress, defiBallot});\n      }\n      resolve({signerAddress: undefined, defiBallot: undefined});\n    });\n  });\n\nexport default getBlockchain;\n","import React, { useState, useEffect } from 'react';\nimport getBlockchain from './ethereum.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport './App.css'\n\nconst SIDE = {\n  BEEPLE: 0,\n  CROSSROADS: 1\n};\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [defiBallot, setDefiBallot] = useState(undefined);\n  const [votePredictions, setVotePredictions] = useState(undefined);\n  const [myVotes, setMyVotes] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const { signerAddress, defiBallot } = await getBlockchain();\n      const votes = await Promise.all([\n        defiBallot.votes(SIDE.BEEPLE),\n        defiBallot.votes(SIDE.CROSSROADS)\n      ]);\n      const votePredictions = {\n      \tlabels: [\n      \t\t'Crossroads',\n      \t\t'Beeple',\n      \t],\n      \tdatasets: [{\n      \t\tdata: [votes[1].toString(), votes[0].toString()],\n      \t\tbackgroundColor: [\n            '#86fde8',\n            '#acb6e5',\n      \t\t],\n      \t\thoverBackgroundColor: [\n            '#86fde8',\n            '#acb6e5',\n      \t\t],\n      \t}]\n      };\n      const myVotes = await Promise.all([\n        defiBallot.votesPerGambler(signerAddress, SIDE.CROSSROADS),\n        defiBallot.votesPerGambler(signerAddress, SIDE.BEEPLE),\n      ]);\n      setMyVotes(myVotes);\n      //console.log(myBets[0].toString());\n      setVotePredictions(votePredictions);\n      setDefiBallot(defiBallot);\n    };\n    init();\n  }, []);\n\n  if(\n    typeof defiBallot === 'undefined'\n    || typeof votePredictions === 'undefined'\n    || typeof myVotes === 'undefined'\n  ) {\n    return 'Loading...';\n  }\n\n  const placeVote = async (side, e) => {\n    e.preventDefault();\n    await defiBallot.placeVote(\n      side, \n      {value: e.target.elements[0].value}\n    );\n  };\n\n  const withdrawGain = async () => {\n    await defiBallot.withdrawGain();\n  };\n\n  return (\n  <div className='body'>\n    <div className='container'>\n     <h1 className='text-center'>DeFi Ballot</h1>\n     <div className=\"jumbotron\">\n            <h1 className=\"display-4 text-center\">Most Popular NFT of 2021</h1>\n            <p className=\"lead text-center\"><ins>Current Votes</ins></p>\n            <div className='chart'>\n               <Doughnut data={votePredictions} />\n            </div>\n          </div>\n          <div className='col'>\n        <h2 className='your__bets'>Your bets</h2>\n        <div className='col__one'>\n          <b>Beeple:</b> {myVotes[0].toString()} ETH (wei)\n        </div>\n        <div className='col__two'>\n          <b>Crossroads:</b> {myVotes[1].toString()} ETH (wei)\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-sm-6'>\n          <div className=\"card__one\">\n            <img src='./images/crossroads.jpg' alt='Crossroads NFT' className='img__one' />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\"><b>Crossroads</b></h5>\n              <form className=\"form-inline\" onSubmit={e => placeVote(SIDE.CROSSROADS, e)}>\n                <input \n                  type=\"text\" \n                  className=\"form-control mb-2 mr-sm-2\" \n                  placeholder=\"Place a bet.. (ether)\"\n                />\n                <button \n                  type=\"submit\" \n                  className=\"button\"\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className='col-sm-6'>\n          <div className=\"card__two\">\n            <img src='./images/beeple.jpg' alt='Beeple NFT' className='img__two'/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\"><b>Beeple</b></h5>\n              <form className=\"form-inline\">\n                <input \n                  type=\"text\" \n                  className=\"form-control mb-2 mr-sm-2\" \n                  placeholder=\"Place a bet.. (ether)\"\n                />\n                <button \n                  type=\"submit\" \n                  className=\"button\"\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='row'>\n      <h2>Did you win, claim your prize..</h2>\n      <button \n        type=\"submit\" \n        className=\"button\"\n        onClick={e => withdrawGain()}\n      >\n        Submit\n      </button>\n    </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}